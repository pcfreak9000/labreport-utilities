propagate -h
setf -h
sete -h
tex -h
create func kappa
c data pa
c data pb
c data pc
c data result
sete kappa "k = (a-b)/(a-c)" a b c
setf pa v8_stuff.csv -o=2 -v=2 -e=3 -c=7
setf pb v8_stuff.csv -o=2 -v=4 -e=5 -c=7
setf pc v8_stuff.csv -o=2 -v=6 -e=7 -c=7
propagate kappa -p a=pa b=pb c=pc
tex kappa -p=linear -v a -v b -v c
tex kappa
exit

c func q
c data p
c data o
sete q "q = ((p-o)/(p+o))" p o
sete p 182.5 0.2
sete o 179.8 0.2
propagate -p -f=gaussian q p=p o=o
sete p 190.5 0.2
sete o 167.0 0.2
propagate -p -f=gaussian q p=p o=o
tex q gaussian p o
exit

c func fun 
c data g
sete fun  "n = tan(Degree*((180-g)/2))" g
sete g 66 5
propagate -p fun g=g
tex fun linear g
exit


c func kopp
c data x
c data t
c data result
sete x 0.68172 0.03
sete t 0.62928 0.01
sete kopp "k = (X^2-t^2)/(X^2+t^2)" X t
propagate -p kopp X=x t=t
tex kopp gaussian X t
exit

c func schmelz
c data W
c data V
c data m
c data K
c data result
sete W 5524 1140
sete V 1767 91
sete m "0.4635-0.4566" "0.0001+0.0001"
sete K 0.018 0
sete schmelz "Q = (W-V)/(m/K)" W V m K
prop schmelz result W=W V=V m=m K=K
exit